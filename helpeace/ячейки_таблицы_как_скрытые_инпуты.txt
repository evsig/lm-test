Совсем недавно делал подобную задачу в качестве стажировки, основная проблема конечно заключается в валидации на стороне сервера и клиента, но сейчас эту тему не будет трогать.
В общем дам несколько советов. Динамически создавать инпут не нужно. Он должен уже лежать в ячейке, только скрытый. Присваивать значение ячейке лучше сразу, и откатывать в случае ошибки. Это визуально ускорит процесс. Иначе из-за задержек ответа от сервера будет не очень удобно пользоваться. Далее, если у вас id у tr предполагает значение id элемента в БД, то лучше не использовать аттрибут id, а лучше использовать data-id, тоже самое касается и имени поля ('ip'). Рекомендуется все-таки формировать ответ от сервера в формате json, да и все аякс запросы в прочем, таким образом вы сможете не только констатировать удачу/неудачу исполнения php кода, но и передавать различные дополнительные значение, к примеру текст либо код ошибки, таким образом поясняя, что именно произошло не так.
Вот накидал такой примерчик на скорую руку, код подстроен для сервиса jsfiddle
HTML5Выделить код
1
2
3
4
5
6
7
8
9
10
11
12
13
14
<table class='wrap' border='1'>
  <tr data-id='1'>
    <td data-name='ip' class='edit'>
      <div>1231412411</div>
      <input value='1231412411'>
    </td>
  </tr>
  <tr data-id='2'>
    <td id='ip' class='edit'>
      <div>1231412411</div>
      <input value='1231412411'>
    </td>
  </tr>
</table>
CSSВыделить код
1
2
3
.edit input {
  display: none;
}
JavascriptВыделить код
1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
$('.wrap').on('click', '.edit', function() {
  $this = $(this);
  $this.find('div').hide();
  $input = $this.find('input').show().focus();
});
$('.wrap').on('focusout', '.edit input', function() {
  var $input = $(this).hide();
  var $tr = $input.closest('tr');
  var $td = $input.parent();
  var defaultValue = $input[0].defaultValue;
  var newValue = $input.val();
  var $div = $tr.find('div').text($input.val()).show();
  
  if(defaultValue === newValue) {
    return false;
  }
  function fail(){
    $div.text(defaultValue);
    $input.val(defaultValue);
    alert('не удалось изменить элемент');
  }
  $.post('/echo/html/', {
    id: $tr.data('id'),
    name: $td.data('name'),
    value: newValue,
    html: 'ok'
  }).done(function(data){
    if(data==='ok'){
        $input[0].defaultValue = newValue;
    } else {
        fail()
    }
  }).fail(fail)
})
https://jsfiddle.net/c8z3guu1/2/
Здесь приходит тот ответ, который вы посылаете параметром html, таким образом можете генерировать ошибку, изменив передаваемый параметр html, отличный от "ок"